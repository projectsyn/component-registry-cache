parameters:
  registry_cache:
    =_metadata: {}

    namespace: syn-registry-cache

    images:
      registry:
        image: docker.io/library/registry
        tag: 2
      redis:
        image: docker.io/library/redis
        tag: '6.2.4'

    fqdn: dockerhub.example.com
    replicas: 2

    http_secret: '?{vaultkv:${customer:name}/${cluster:name}/registry-cache/http_secret}'

    redis:
      enabled: true
      memory: 1G
      resources:
        requests:
          memory: '100m'
          cpu: '100m'
        limits:
          memory: '${registry_cache:redis:memory}'
          cpu: '200m'
      config: |-
        # Max memory usage
        maxmemory ${registry_cache:redis:memory}
        # Evict oldest keys when out of memory
        maxmemory-policy allkeys-lru
        # Disable persistence entirely
        save ""

    registry:
      resources:
        requests:
          memory: '200Mi'
          cpu: '100m'
        limits:
          memory: '400Mi'
          cpu: '200m'
      config:
        http:
          addr: 0.0.0.0:5000
          host: 'https://${registry_cache:fqdn}'
          secret: '${registry_cache:http_secret}'
        storage:
          delete:
            enabled: true
          s3:
            region: eu-central-1
            regionendpoint: 'https://objects.rma.cloudscale.ch'
            bucket: '${customer:name}-${cluster:name}-registry-mirror-data'
            accesskey: '?{vaultkv:${customer:name}/${cluster:name}/registry-cache/s3_accesskey}'
            secretkey: '?{vaultkv:${customer:name}/${cluster:name}/registry-cache/s3_secretkey}'
        proxy:
          remoteurl: 'https://registry-1.docker.io'
          username: '?{vaultkv:${customer:name}/${cluster:name}/registry-cache/proxy_username}'
          password: '?{vaultkv:${customer:name}/${cluster:name}/registry-cache/proxy_password}'

    expose_type: ingress
